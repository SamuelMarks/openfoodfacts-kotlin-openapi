/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ResponseStatusResult
import org.openapitools.client.models.WarningOrErrorMessage

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonElement

/**
 * 
 *
 * @param statusId Overall status of the request: whether it failed or succeeded, with or without warnings or errors.
 * @param result 
 * @param warnings List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).
 * @param errors List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value thaty is impossibly high).
 * @param suggestions Array of sorted strings suggestions in the language requested in the \"lc\" field.
 * @param matchedSynonyms Dictionary of strings associating canonical names (as seen in suggestions field) with the synonym that best matches the query. An entry is present for all suggestions, even when the synonym is the same with the canonical name.  This value is present only if get_synonyms parameter is present. 
 */

@Serializable
data class GetApiV3TaxonomySuggestionsTaxonomy200Response (

    /* Overall status of the request: whether it failed or succeeded, with or without warnings or errors. */
    @SerialName("status_id")
    val statusId: GetApiV3TaxonomySuggestionsTaxonomy200Response.StatusId? = null,

    @SerialName("result")
    val result: ResponseStatusResult? = null,

    /* List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high). */
    @SerialName("warnings")
    val warnings: kotlin.collections.List<WarningOrErrorMessage>? = null,

    /* List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value thaty is impossibly high). */
    @SerialName("errors")
    val errors: kotlin.collections.List<WarningOrErrorMessage>? = null,

    /* Array of sorted strings suggestions in the language requested in the \"lc\" field. */
    @SerialName("suggestions")
    val suggestions: kotlin.collections.List<kotlin.String>? = null,

    /* Dictionary of strings associating canonical names (as seen in suggestions field) with the synonym that best matches the query. An entry is present for all suggestions, even when the synonym is the same with the canonical name.  This value is present only if get_synonyms parameter is present.  */
    @SerialName("matched_synonyms")
    val matchedSynonyms: JsonElement? = null

) {

    /**
     * Overall status of the request: whether it failed or succeeded, with or without warnings or errors.
     *
     * Values: success,success_with_warnings,success_with_errors,failure
     */
    // @JsonClass(generateAdapter = false)
    enum class StatusId(val value: kotlin.String) {
        @SerialName("success") success("success"),
        @SerialName("success_with_warnings") success_with_warnings("success_with_warnings"),
        @SerialName("success_with_errors") success_with_errors("success_with_errors"),
        @SerialName("failure") failure("failure");
    }

}


/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable


/**
 * 
 *
 * @param id Unique id of the attribute.  It will be use to match against preferences parameters. 
 * @param status wether we have the information to really compute this criteria or not.
 * @param title A descriptive sentence about the situation of the product concerning attribute 
 * @param match a numeric value for the match, telling how much the products ranks well for this particular attribute. The higher the value, the better the match. 
 * @param grade every attribute as a grade for a to e
 * @param name The name of attribute, for eventual display
 * @param iconUrl an icon representing the attribute match (often using a color)
 * @param description An eventual description of the value of the property upon which this attribute is based
 * @param descriptionShort An eventual short description of the value of the property upon which this attribute is based
 */

@Serializable
data class GetProductByBarcode200ResponseAllOfAllOfAttributeGroupsInner (

    /* Unique id of the attribute.  It will be use to match against preferences parameters.  */
    @SerialName("id")
    val id: kotlin.String? = null,

    /* wether we have the information to really compute this criteria or not. */
    @SerialName("status")
    val status: GetProductByBarcode200ResponseAllOfAllOfAttributeGroupsInner.Status? = null,

    /* A descriptive sentence about the situation of the product concerning attribute  */
    @SerialName("title")
    val title: kotlin.String? = null,

    /* a numeric value for the match, telling how much the products ranks well for this particular attribute. The higher the value, the better the match.  */
    @SerialName("match")
    val match: kotlin.Float? = null,

    /* every attribute as a grade for a to e */
    @SerialName("grade")
    val grade: GetProductByBarcode200ResponseAllOfAllOfAttributeGroupsInner.Grade? = null,

    /* The name of attribute, for eventual display */
    @SerialName("name")
    val name: kotlin.String? = null,

    /* an icon representing the attribute match (often using a color) */
    @SerialName("icon_url")
    val iconUrl: kotlin.String? = null,

    /* An eventual description of the value of the property upon which this attribute is based */
    @SerialName("description")
    val description: kotlin.String? = null,

    /* An eventual short description of the value of the property upon which this attribute is based */
    @SerialName("description_short")
    val descriptionShort: kotlin.String? = null

) {

    /**
     * wether we have the information to really compute this criteria or not.
     *
     * Values: known,unknown
     */
    // @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @SerialName("known") known("known"),
        @SerialName("unknown") unknown("unknown");
    }
    /**
     * every attribute as a grade for a to e
     *
     * Values: unknown,a,b,c,d,e
     */
    // @JsonClass(generateAdapter = false)
    enum class Grade(val value: kotlin.String) {
        @SerialName("unknown") unknown("unknown"),
        @SerialName("a") a("a"),
        @SerialName("b") b("b"),
        @SerialName("c") c("c"),
        @SerialName("d") d("d"),
        @SerialName("e") e("e");
    }

}


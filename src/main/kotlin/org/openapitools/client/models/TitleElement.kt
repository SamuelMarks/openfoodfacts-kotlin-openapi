/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * The title of a panel.
 *
 * @param name A short name of this panel, not including any actual values
 * @param title 
 * @param type Used to indicate how the value of this item is measured, such as \"grade\" for Nutri-Score and Eco-Score or \"percentage\" for Salt
 * @param grade The value for this panel where it corresponds to a A to E grade such as the Nutri-Score of the Eco-Score.
 * @param `value` The numeric value of the panel, where the type is \"percentage\"
 * @param iconUrl 
 * @param iconColorFromEvaluation 
 * @param iconSize If set to \"small\", the icon should be displayed at a small size. 
 */


data class TitleElement (

    /* A short name of this panel, not including any actual values */
    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "title")
    val title: kotlin.String? = null,

    /* Used to indicate how the value of this item is measured, such as \"grade\" for Nutri-Score and Eco-Score or \"percentage\" for Salt */
    @Json(name = "type")
    val type: TitleElement.Type? = null,

    /* The value for this panel where it corresponds to a A to E grade such as the Nutri-Score of the Eco-Score. */
    @Json(name = "grade")
    val grade: TitleElement.Grade? = null,

    /* The numeric value of the panel, where the type is \"percentage\" */
    @Json(name = "value")
    val `value`: java.math.BigDecimal? = null,

    @Json(name = "icon_url")
    val iconUrl: kotlin.String? = null,

    @Json(name = "icon_color_from_evaluation")
    val iconColorFromEvaluation: kotlin.String? = null,

    /* If set to \"small\", the icon should be displayed at a small size.  */
    @Json(name = "icon_size")
    val iconSize: kotlin.String? = null

) {

    /**
     * Used to indicate how the value of this item is measured, such as \"grade\" for Nutri-Score and Eco-Score or \"percentage\" for Salt
     *
     * Values: grade,percentage
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "grade") grade("grade"),
        @Json(name = "percentage") percentage("percentage");
    }
    /**
     * The value for this panel where it corresponds to a A to E grade such as the Nutri-Score of the Eco-Score.
     *
     * Values: a,b,c,d,e,unknown
     */
    @JsonClass(generateAdapter = false)
    enum class Grade(val value: kotlin.String) {
        @Json(name = "a") a("a"),
        @Json(name = "b") b("b"),
        @Json(name = "c") c("c"),
        @Json(name = "d") d("d"),
        @Json(name = "e") e("e"),
        @Json(name = "unknown") unknown("unknown");
    }

}


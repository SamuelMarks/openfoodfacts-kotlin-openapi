/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetProductByBarcode200ResponseAllOfAllOfSourcesInner
import org.openapitools.client.models.GetProductByBarcode200ResponseAllOfAllOfSourcesInnerManufacturer

class GetProductByBarcode200ResponseAllOfAllOfSourcesInnerTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetProductByBarcode200ResponseAllOfAllOfSourcesInner
        //val modelInstance = GetProductByBarcode200ResponseAllOfAllOfSourcesInner()

        // to test the property `fields`
        should("test fields") {
            // uncomment below to test the property
            //modelInstance.fields shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `images`
        should("test images") {
            // uncomment below to test the property
            //modelInstance.images shouldBe ("TODO")
        }

        // to test the property `importT`
        should("test importT") {
            // uncomment below to test the property
            //modelInstance.importT shouldBe ("TODO")
        }

        // to test the property `manufacturer`
        should("test manufacturer") {
            // uncomment below to test the property
            //modelInstance.manufacturer shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `sourceLicence`
        should("test sourceLicence") {
            // uncomment below to test the property
            //modelInstance.sourceLicence shouldBe ("TODO")
        }

        // to test the property `sourceLicenceUrl`
        should("test sourceLicenceUrl") {
            // uncomment below to test the property
            //modelInstance.sourceLicenceUrl shouldBe ("TODO")
        }

        // to test the property `url`
        should("test url") {
            // uncomment below to test the property
            //modelInstance.url shouldBe ("TODO")
        }

    }
}

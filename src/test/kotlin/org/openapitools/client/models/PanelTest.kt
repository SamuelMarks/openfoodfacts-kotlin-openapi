/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.Panel
import org.openapitools.client.models.Element
import org.openapitools.client.models.TitleElement

class PanelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Panel
        //val modelInstance = Panel()

        // to test the property `type` - Type of the panel. If set to \"card\", the panel and its sub-panels should be displayed in a card. If set to \"inline\", the panel should have its content always displayed.
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `expanded` - If true, the panel is to be displayed already expanded. If false, only the title should be displayed, and the user should be able to click or tap it to open the panel and display the elements.
        should("test expanded") {
            // uncomment below to test the property
            //modelInstance.expanded shouldBe ("TODO")
        }

        // to test the property `expandFor` - If set to \"large\", the content of the panel should be expanded on large screens, but it should still be possible to unexpand it.
        should("test expandFor") {
            // uncomment below to test the property
            //modelInstance.expandFor shouldBe ("TODO")
        }

        // to test the property `evaluation` - A simple assessment of the panel value, typically used to format fonts, et.c e.g. bad = red
        should("test evaluation") {
            // uncomment below to test the property
            //modelInstance.evaluation shouldBe ("TODO")
        }

        // to test the property `titleElement`
        should("test titleElement") {
            // uncomment below to test the property
            //modelInstance.titleElement shouldBe ("TODO")
        }

        // to test the property `elements` - An ordered list of elements to display in the content of the panel.
        should("test elements") {
            // uncomment below to test the property
            //modelInstance.elements shouldBe ("TODO")
        }

        // to test the property `level` - a message level, as levels we use in log. It might help theming the panel visualy 
        should("test level") {
            // uncomment below to test the property
            //modelInstance.level shouldBe ("TODO")
        }

        // to test the property `propertySize` - size is either empty (normal display)  or small to indicate a panel that should have a smaller font size 
        should("test propertySize") {
            // uncomment below to test the property
            //modelInstance.propertySize shouldBe ("TODO")
        }

        // to test the property `topics`
        should("test topics") {
            // uncomment below to test the property
            //modelInstance.topics shouldBe ("TODO")
        }

    }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetProductByBarcode200ResponseAllOfAllOfEcoscoreData
import org.openapitools.client.models.GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAdjustments
import org.openapitools.client.models.GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAgribalyse
import org.openapitools.client.models.GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataMissing
import org.openapitools.client.models.GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataPreviousData

class GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetProductByBarcode200ResponseAllOfAllOfEcoscoreData
        //val modelInstance = GetProductByBarcode200ResponseAllOfAllOfEcoscoreData()

        // to test the property `adjustments`
        should("test adjustments") {
            // uncomment below to test the property
            //modelInstance.adjustments shouldBe ("TODO")
        }

        // to test the property `agribalyse`
        should("test agribalyse") {
            // uncomment below to test the property
            //modelInstance.agribalyse shouldBe ("TODO")
        }

        // to test the property `grade`
        should("test grade") {
            // uncomment below to test the property
            //modelInstance.grade shouldBe ("TODO")
        }

        // to test the property `grades`
        should("test grades") {
            // uncomment below to test the property
            //modelInstance.grades shouldBe ("TODO")
        }

        // to test the property `missing`
        should("test missing") {
            // uncomment below to test the property
            //modelInstance.missing shouldBe ("TODO")
        }

        // to test the property `missingDataWarning`
        should("test missingDataWarning") {
            // uncomment below to test the property
            //modelInstance.missingDataWarning shouldBe ("TODO")
        }

        // to test the property `previousData`
        should("test previousData") {
            // uncomment below to test the property
            //modelInstance.previousData shouldBe ("TODO")
        }

        // to test the property `score`
        should("test score") {
            // uncomment below to test the property
            //modelInstance.score shouldBe ("TODO")
        }

        // to test the property `scores`
        should("test scores") {
            // uncomment below to test the property
            //modelInstance.scores shouldBe ("TODO")
        }

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

    }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAgribalyse

class GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAgribalyseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAgribalyse
        //val modelInstance = GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAgribalyse()

        // to test the property `agribalyseFoodCode`
        should("test agribalyseFoodCode") {
            // uncomment below to test the property
            //modelInstance.agribalyseFoodCode shouldBe ("TODO")
        }

        // to test the property `co2Agriculture`
        should("test co2Agriculture") {
            // uncomment below to test the property
            //modelInstance.co2Agriculture shouldBe ("TODO")
        }

        // to test the property `co2Consumption`
        should("test co2Consumption") {
            // uncomment below to test the property
            //modelInstance.co2Consumption shouldBe ("TODO")
        }

        // to test the property `co2Distribution`
        should("test co2Distribution") {
            // uncomment below to test the property
            //modelInstance.co2Distribution shouldBe ("TODO")
        }

        // to test the property `co2Packaging`
        should("test co2Packaging") {
            // uncomment below to test the property
            //modelInstance.co2Packaging shouldBe ("TODO")
        }

        // to test the property `co2Processing`
        should("test co2Processing") {
            // uncomment below to test the property
            //modelInstance.co2Processing shouldBe ("TODO")
        }

        // to test the property `co2Total`
        should("test co2Total") {
            // uncomment below to test the property
            //modelInstance.co2Total shouldBe ("TODO")
        }

        // to test the property `co2Transportation`
        should("test co2Transportation") {
            // uncomment below to test the property
            //modelInstance.co2Transportation shouldBe ("TODO")
        }

        // to test the property `code`
        should("test code") {
            // uncomment below to test the property
            //modelInstance.code shouldBe ("TODO")
        }

        // to test the property `dqr`
        should("test dqr") {
            // uncomment below to test the property
            //modelInstance.dqr shouldBe ("TODO")
        }

        // to test the property `efAgriculture`
        should("test efAgriculture") {
            // uncomment below to test the property
            //modelInstance.efAgriculture shouldBe ("TODO")
        }

        // to test the property `efConsumption`
        should("test efConsumption") {
            // uncomment below to test the property
            //modelInstance.efConsumption shouldBe ("TODO")
        }

        // to test the property `efDistribution`
        should("test efDistribution") {
            // uncomment below to test the property
            //modelInstance.efDistribution shouldBe ("TODO")
        }

        // to test the property `efPackaging`
        should("test efPackaging") {
            // uncomment below to test the property
            //modelInstance.efPackaging shouldBe ("TODO")
        }

        // to test the property `efProcessing`
        should("test efProcessing") {
            // uncomment below to test the property
            //modelInstance.efProcessing shouldBe ("TODO")
        }

        // to test the property `efTotal`
        should("test efTotal") {
            // uncomment below to test the property
            //modelInstance.efTotal shouldBe ("TODO")
        }

        // to test the property `efTransportation`
        should("test efTransportation") {
            // uncomment below to test the property
            //modelInstance.efTransportation shouldBe ("TODO")
        }

        // to test the property `isBeverage`
        should("test isBeverage") {
            // uncomment below to test the property
            //modelInstance.isBeverage shouldBe ("TODO")
        }

        // to test the property `nameEn` - This can be returned in many other languages like name_fr (for french). 
        should("test nameEn") {
            // uncomment below to test the property
            //modelInstance.nameEn shouldBe ("TODO")
        }

        // to test the property `score`
        should("test score") {
            // uncomment below to test the property
            //modelInstance.score shouldBe ("TODO")
        }

        // to test the property `version`
        should("test version") {
            // uncomment below to test the property
            //modelInstance.version shouldBe ("TODO")
        }

    }
}

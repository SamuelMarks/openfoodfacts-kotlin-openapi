/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.PackagingComponentWRITE
import org.openapitools.client.models.AnyOfLessThanGreaterThan
import org.openapitools.client.models.PackagingComponentWRITEWeightMeasured
import org.openapitools.client.models.PackagingComponentWRITEWeightSpecified

class PackagingComponentWRITETest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PackagingComponentWRITE
        //val modelInstance = PackagingComponentWRITE()

        // to test the property `numberOfUnits` - Number of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)
        should("test numberOfUnits") {
            // uncomment below to test the property
            //modelInstance.numberOfUnits shouldBe ("TODO")
        }

        // to test the property `shape` - The shape property is canonicalized using the packaging_shapes taxonomy.
        should("test shape") {
            // uncomment below to test the property
            //modelInstance.shape shouldBe ("TODO")
        }

        // to test the property `material` - The material property is canonicalized using the packaging_materials taxonomy.
        should("test material") {
            // uncomment below to test the property
            //modelInstance.material shouldBe ("TODO")
        }

        // to test the property `recycling` - The recycling property is canonicalized using the packaging_recycling taxonomy.
        should("test recycling") {
            // uncomment below to test the property
            //modelInstance.recycling shouldBe ("TODO")
        }

        // to test the property `quantityPerUnit` - Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)
        should("test quantityPerUnit") {
            // uncomment below to test the property
            //modelInstance.quantityPerUnit shouldBe ("TODO")
        }

        // to test the property `weightSpecified`
        should("test weightSpecified") {
            // uncomment below to test the property
            //modelInstance.weightSpecified shouldBe ("TODO")
        }

        // to test the property `weightMeasured`
        should("test weightMeasured") {
            // uncomment below to test the property
            //modelInstance.weightMeasured shouldBe ("TODO")
        }

        // to test the property `brands` - A comma separated list of brands / product names for the packaging component (e.g. \"Tetra Pak\", Tetra Brik\"
        should("test brands") {
            // uncomment below to test the property
            //modelInstance.brands shouldBe ("TODO")
        }

        // to test the property `labels` - A comma separated list of labels, canonicalized with the packaging_labels taxonomy (e.g. \"en:FSC, fr:Encre végétale\")
        should("test labels") {
            // uncomment below to test the property
            //modelInstance.labels shouldBe ("TODO")
        }

    }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.PackagingComponentREAD
import org.openapitools.client.models.PackagingComponentMaterial
import org.openapitools.client.models.PackagingComponentRecyclingInstruction
import org.openapitools.client.models.PackagingComponentShape

class PackagingComponentREADTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PackagingComponentREAD
        //val modelInstance = PackagingComponentREAD()

        // to test the property `numberOfUnits` - umber of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)
        should("test numberOfUnits") {
            // uncomment below to test the property
            //modelInstance.numberOfUnits shouldBe ("TODO")
        }

        // to test the property `shape`
        should("test shape") {
            // uncomment below to test the property
            //modelInstance.shape shouldBe ("TODO")
        }

        // to test the property `material`
        should("test material") {
            // uncomment below to test the property
            //modelInstance.material shouldBe ("TODO")
        }

        // to test the property `recycling`
        should("test recycling") {
            // uncomment below to test the property
            //modelInstance.recycling shouldBe ("TODO")
        }

        // to test the property `quantityPerUnit` - Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)
        should("test quantityPerUnit") {
            // uncomment below to test the property
            //modelInstance.quantityPerUnit shouldBe ("TODO")
        }

        // to test the property `quantityPerUnitValue` - Value parsed from the quantity field.
        should("test quantityPerUnitValue") {
            // uncomment below to test the property
            //modelInstance.quantityPerUnitValue shouldBe ("TODO")
        }

        // to test the property `quantityPerUnitUnit` - Unit parsed and normalized from the quantity field.
        should("test quantityPerUnitUnit") {
            // uncomment below to test the property
            //modelInstance.quantityPerUnitUnit shouldBe ("TODO")
        }

        // to test the property `weightSpecified` - Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component).
        should("test weightSpecified") {
            // uncomment below to test the property
            //modelInstance.weightSpecified shouldBe ("TODO")
        }

        // to test the property `weightMeasured` - Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component).
        should("test weightMeasured") {
            // uncomment below to test the property
            //modelInstance.weightMeasured shouldBe ("TODO")
        }

        // to test the property `weightEstimated` - Weight (as estimated from similar products) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component).
        should("test weightEstimated") {
            // uncomment below to test the property
            //modelInstance.weightEstimated shouldBe ("TODO")
        }

        // to test the property `weight` - Weight of one unit of the empty packaging component.
        should("test weight") {
            // uncomment below to test the property
            //modelInstance.weight shouldBe ("TODO")
        }

        // to test the property `weightSourceId` - Indicates which field was used to populate the \"weight\" field. Either \"specified\", \"measured\", or \"estimated\"
        should("test weightSourceId") {
            // uncomment below to test the property
            //modelInstance.weightSourceId shouldBe ("TODO")
        }

    }
}

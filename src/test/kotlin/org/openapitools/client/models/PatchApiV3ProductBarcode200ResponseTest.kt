/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.PatchApiV3ProductBarcode200Response
import org.openapitools.client.models.PatchApiV3ProductBarcode200ResponseAllOfProduct
import org.openapitools.client.models.ResponseStatusResult
import org.openapitools.client.models.WarningOrErrorMessage

class PatchApiV3ProductBarcode200ResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PatchApiV3ProductBarcode200Response
        //val modelInstance = PatchApiV3ProductBarcode200Response()

        // to test the property `statusId` - Overall status of the request: whether it failed or succeeded, with or without warnings or errors.
        should("test statusId") {
            // uncomment below to test the property
            //modelInstance.statusId shouldBe ("TODO")
        }

        // to test the property `result`
        should("test result") {
            // uncomment below to test the property
            //modelInstance.result shouldBe ("TODO")
        }

        // to test the property `warnings` - List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).
        should("test warnings") {
            // uncomment below to test the property
            //modelInstance.warnings shouldBe ("TODO")
        }

        // to test the property `errors` - List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value thaty is impossibly high).
        should("test errors") {
            // uncomment below to test the property
            //modelInstance.errors shouldBe ("TODO")
        }

        // to test the property `product`
        should("test product") {
            // uncomment below to test the property
            //modelInstance.product shouldBe ("TODO")
        }

    }
}

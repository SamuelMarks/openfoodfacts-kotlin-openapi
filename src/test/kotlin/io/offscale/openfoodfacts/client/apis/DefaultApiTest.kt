/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.offscale.openfoodfacts.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.offscale.openfoodfacts.client.apis.DefaultApi
import io.offscale.openfoodfacts.client.models.GetApiV3TagTagtypeTagOrTagid200Response
import io.offscale.openfoodfacts.client.models.GetApiV3TaxonomySuggestionsTaxonomy200Response
import io.offscale.openfoodfacts.client.models.PatchApiV3ProductBarcode200Response
import io.offscale.openfoodfacts.client.models.PatchApiV3ProductBarcodeRequest
import io.offscale.openfoodfacts.client.models.PostApiV3ProductRevert200Response
import io.offscale.openfoodfacts.client.models.PostApiV3ProductRevertRequest

class DefaultApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DefaultApi
        //val apiInstance = DefaultApi()

        // to test getApiV3TagTagtypeTagOrTagid
        should("test getApiV3TagTagtypeTagOrTagid") {
            // uncomment below to test getApiV3TagTagtypeTagOrTagid
            //val tagtype : kotlin.String = categories // kotlin.String | Type of the tag
            //val tagOrTagid : kotlin.String = tagOrTagid_example // kotlin.String | Tag name (e.g. yogurts) or tag id (e.g. en:yogurts)
            //val cc : kotlin.String = us // kotlin.String | 2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request.
            //val lc : kotlin.String = fr // kotlin.String | 2 letter code of the language of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the language may be inferred by the Accept-Language header of the request.
            //val result : GetApiV3TagTagtypeTagOrTagid200Response = apiInstance.getApiV3TagTagtypeTagOrTagid(tagtype, tagOrTagid, cc, lc)
            //result shouldBe ("TODO")
        }

        // to test getApiV3TaxonomySuggestionsTaxonomy
        should("test getApiV3TaxonomySuggestionsTaxonomy") {
            // uncomment below to test getApiV3TaxonomySuggestionsTaxonomy
            //val tagtype : kotlin.String = additives // kotlin.String | 
            //val cc : kotlin.String = us // kotlin.String | 2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request.
            //val lc : kotlin.String = fr // kotlin.String | 2 letter code of the language of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the language may be inferred by the Accept-Language header of the request.
            //val string : kotlin.String = pe // kotlin.String | Optional string used to filter suggestions (useful for autocomplete).  If passed, suggestions starting with the string will be returned first, followed by suggestions matching the string at the beginning of a word, and suggestions matching the string inside a word.
            //val categories : kotlin.String = yougurts // kotlin.String | Comma separated list of categories tags (e.g. \"en:fats,en:unsalted-butters\" or categories names in the language indicated by the \"lc\" field (e.g. \"graisses, beurres sal√©s\" in French)
            //val shape : kotlin.String = bottle // kotlin.String | Shape of packaging component (tag identified in the packaging_shapes taxonomy, or plain text tag name in the language indicated by the \"lc\" field)
            //val limit : kotlin.String = limit_example // kotlin.String | Maximum number of suggestions. Default is 25, max is 400.
            //val getSynonyms : kotlin.String = getSynonyms_example // kotlin.String | Whether or not to include \"matched_synonyms\" in the response. Set to 1 to include.
            //val term : kotlin.String = term_example // kotlin.String | Alias for the \"string\" parameter provided for backward compatibility. \"string\" takes precedence.
            //val result : GetApiV3TaxonomySuggestionsTaxonomy200Response = apiInstance.getApiV3TaxonomySuggestionsTaxonomy(tagtype, cc, lc, string, categories, shape, limit, getSynonyms, term)
            //result shouldBe ("TODO")
        }

        // to test patchApiV3ProductBarcode
        should("test patchApiV3ProductBarcode") {
            // uncomment below to test patchApiV3ProductBarcode
            //val barcode : kotlin.String = barcode_example // kotlin.String | Barcode of the product to create or update, or \"test\" to analyze the product data sent without creating or updating a product
            //val patchApiV3ProductBarcodeRequest : PatchApiV3ProductBarcodeRequest = {"lc":"fr","cc":"fr","fields":"product_name,packagings","tags_lc":"fr","userid":"string","password":"string","code":"string","product":{"packagings":[{"number_of_units":6,"shape":{"id":"en:bottle"},"material":{"id":"en:plastic"},"recycling":{"id":"en:recycle"},"quantity_per_unit":"25 cl","weight_measured":10}],"packagings_add":[{"number_of_units":6,"shape":{"id":"en:bottle"},"material":{"id":"en:plastic"},"recycling":{"id":"en:recycle"},"quantity_per_unit":"25 cl","weight_measured":10}]}} // PatchApiV3ProductBarcodeRequest | Structured data for the product is passed in the product field.  For complex structures such as the packagings object, it is possible to replace pre-existing data, or completing it:  - an object sent in the packagings field will replace any pre-existing data. - an object sent in the field suffixed with _add (e.g. packagings_add) will be merged with any pre-existing data. 
            //val result : PatchApiV3ProductBarcode200Response = apiInstance.patchApiV3ProductBarcode(barcode, patchApiV3ProductBarcodeRequest)
            //result shouldBe ("TODO")
        }

        // to test postApiV3ProductRevert
        should("test postApiV3ProductRevert") {
            // uncomment below to test postApiV3ProductRevert
            //val postApiV3ProductRevertRequest : PostApiV3ProductRevertRequest =  // PostApiV3ProductRevertRequest | The code and rev fields are mandatory. 
            //val result : PostApiV3ProductRevert200Response = apiInstance.postApiV3ProductRevert(postApiV3ProductRevertRequest)
            //result shouldBe ("TODO")
        }

    }
}

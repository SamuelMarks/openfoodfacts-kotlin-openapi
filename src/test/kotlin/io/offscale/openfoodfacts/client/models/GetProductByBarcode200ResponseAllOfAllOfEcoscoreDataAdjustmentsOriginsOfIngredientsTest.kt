/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.offscale.openfoodfacts.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.offscale.openfoodfacts.client.models.GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAdjustmentsOriginsOfIngredients
import io.offscale.openfoodfacts.client.models.GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAdjustmentsOriginsOfIngredientsAggregatedOriginsInner

class GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAdjustmentsOriginsOfIngredientsTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAdjustmentsOriginsOfIngredients
        //val modelInstance = GetProductByBarcode200ResponseAllOfAllOfEcoscoreDataAdjustmentsOriginsOfIngredients()

        // to test the property `aggregatedOrigins`
        should("test aggregatedOrigins") {
            // uncomment below to test the property
            //modelInstance.aggregatedOrigins shouldBe ("TODO")
        }

        // to test the property `epiScore`
        should("test epiScore") {
            // uncomment below to test the property
            //modelInstance.epiScore shouldBe ("TODO")
        }

        // to test the property `epiValue`
        should("test epiValue") {
            // uncomment below to test the property
            //modelInstance.epiValue shouldBe ("TODO")
        }

        // to test the property `originsFromOriginsField`
        should("test originsFromOriginsField") {
            // uncomment below to test the property
            //modelInstance.originsFromOriginsField shouldBe ("TODO")
        }

        // to test the property `transportationScores`
        should("test transportationScores") {
            // uncomment below to test the property
            //modelInstance.transportationScores shouldBe ("TODO")
        }

        // to test the property `transportationValues`
        should("test transportationValues") {
            // uncomment below to test the property
            //modelInstance.transportationValues shouldBe ("TODO")
        }

        // to test the property `propertyValues`
        should("test propertyValues") {
            // uncomment below to test the property
            //modelInstance.propertyValues shouldBe ("TODO")
        }

        // to test the property `warning`
        should("test warning") {
            // uncomment below to test the property
            //modelInstance.warning shouldBe ("TODO")
        }

    }
}

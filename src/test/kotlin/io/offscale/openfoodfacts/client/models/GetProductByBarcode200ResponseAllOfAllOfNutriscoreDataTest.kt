/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.offscale.openfoodfacts.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.offscale.openfoodfacts.client.models.GetProductByBarcode200ResponseAllOfAllOfNutriscoreData

class GetProductByBarcode200ResponseAllOfAllOfNutriscoreDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetProductByBarcode200ResponseAllOfAllOfNutriscoreData
        //val modelInstance = GetProductByBarcode200ResponseAllOfAllOfNutriscoreData()

        // to test the property `energy`
        should("test energy") {
            // uncomment below to test the property
            //modelInstance.energy shouldBe ("TODO")
        }

        // to test the property `energyPoints`
        should("test energyPoints") {
            // uncomment below to test the property
            //modelInstance.energyPoints shouldBe ("TODO")
        }

        // to test the property `energyValue`
        should("test energyValue") {
            // uncomment below to test the property
            //modelInstance.energyValue shouldBe ("TODO")
        }

        // to test the property `fiber`
        should("test fiber") {
            // uncomment below to test the property
            //modelInstance.fiber shouldBe ("TODO")
        }

        // to test the property `fiberPoints`
        should("test fiberPoints") {
            // uncomment below to test the property
            //modelInstance.fiberPoints shouldBe ("TODO")
        }

        // to test the property `fiberValue`
        should("test fiberValue") {
            // uncomment below to test the property
            //modelInstance.fiberValue shouldBe ("TODO")
        }

        // to test the property `fruitsVegetablesNutsColzaWalnutOliveOils`
        should("test fruitsVegetablesNutsColzaWalnutOliveOils") {
            // uncomment below to test the property
            //modelInstance.fruitsVegetablesNutsColzaWalnutOliveOils shouldBe ("TODO")
        }

        // to test the property `fruitsVegetablesNutsColzaWalnutOliveOilsPoints`
        should("test fruitsVegetablesNutsColzaWalnutOliveOilsPoints") {
            // uncomment below to test the property
            //modelInstance.fruitsVegetablesNutsColzaWalnutOliveOilsPoints shouldBe ("TODO")
        }

        // to test the property `fruitsVegetablesNutsColzaWalnutOliveOilsValue`
        should("test fruitsVegetablesNutsColzaWalnutOliveOilsValue") {
            // uncomment below to test the property
            //modelInstance.fruitsVegetablesNutsColzaWalnutOliveOilsValue shouldBe ("TODO")
        }

        // to test the property `grade`
        should("test grade") {
            // uncomment below to test the property
            //modelInstance.grade shouldBe ("TODO")
        }

        // to test the property `isBeverage`
        should("test isBeverage") {
            // uncomment below to test the property
            //modelInstance.isBeverage shouldBe ("TODO")
        }

        // to test the property `isCheese`
        should("test isCheese") {
            // uncomment below to test the property
            //modelInstance.isCheese shouldBe ("TODO")
        }

        // to test the property `isFat`
        should("test isFat") {
            // uncomment below to test the property
            //modelInstance.isFat shouldBe ("TODO")
        }

        // to test the property `isWater`
        should("test isWater") {
            // uncomment below to test the property
            //modelInstance.isWater shouldBe ("TODO")
        }

        // to test the property `negativePoints`
        should("test negativePoints") {
            // uncomment below to test the property
            //modelInstance.negativePoints shouldBe ("TODO")
        }

        // to test the property `positivePoints`
        should("test positivePoints") {
            // uncomment below to test the property
            //modelInstance.positivePoints shouldBe ("TODO")
        }

        // to test the property `proteins`
        should("test proteins") {
            // uncomment below to test the property
            //modelInstance.proteins shouldBe ("TODO")
        }

        // to test the property `proteinsPoints`
        should("test proteinsPoints") {
            // uncomment below to test the property
            //modelInstance.proteinsPoints shouldBe ("TODO")
        }

        // to test the property `proteinsValue`
        should("test proteinsValue") {
            // uncomment below to test the property
            //modelInstance.proteinsValue shouldBe ("TODO")
        }

        // to test the property `saturatedFat`
        should("test saturatedFat") {
            // uncomment below to test the property
            //modelInstance.saturatedFat shouldBe ("TODO")
        }

        // to test the property `saturatedFatPoints`
        should("test saturatedFatPoints") {
            // uncomment below to test the property
            //modelInstance.saturatedFatPoints shouldBe ("TODO")
        }

        // to test the property `saturatedFatRatio`
        should("test saturatedFatRatio") {
            // uncomment below to test the property
            //modelInstance.saturatedFatRatio shouldBe ("TODO")
        }

        // to test the property `saturatedFatRatioPoints`
        should("test saturatedFatRatioPoints") {
            // uncomment below to test the property
            //modelInstance.saturatedFatRatioPoints shouldBe ("TODO")
        }

        // to test the property `saturatedFatRatioValue`
        should("test saturatedFatRatioValue") {
            // uncomment below to test the property
            //modelInstance.saturatedFatRatioValue shouldBe ("TODO")
        }

        // to test the property `saturatedFatValue`
        should("test saturatedFatValue") {
            // uncomment below to test the property
            //modelInstance.saturatedFatValue shouldBe ("TODO")
        }

        // to test the property `score`
        should("test score") {
            // uncomment below to test the property
            //modelInstance.score shouldBe ("TODO")
        }

        // to test the property `sodium`
        should("test sodium") {
            // uncomment below to test the property
            //modelInstance.sodium shouldBe ("TODO")
        }

        // to test the property `sodiumPoints`
        should("test sodiumPoints") {
            // uncomment below to test the property
            //modelInstance.sodiumPoints shouldBe ("TODO")
        }

        // to test the property `sodiumValue`
        should("test sodiumValue") {
            // uncomment below to test the property
            //modelInstance.sodiumValue shouldBe ("TODO")
        }

        // to test the property `sugars`
        should("test sugars") {
            // uncomment below to test the property
            //modelInstance.sugars shouldBe ("TODO")
        }

        // to test the property `sugarsPoints`
        should("test sugarsPoints") {
            // uncomment below to test the property
            //modelInstance.sugarsPoints shouldBe ("TODO")
        }

        // to test the property `sugarsValue`
        should("test sugarsValue") {
            // uncomment below to test the property
            //modelInstance.sugarsValue shouldBe ("TODO")
        }

    }
}
